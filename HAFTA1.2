def power(a,b):       
    if  b == 1:
         return a
     
    if b == 0:
        return 1
    if b > 1 :
        if b % 2 == 0:
            return power(a*a,b/2)
        
    return  power(a*a,int(b/2))*a
     
    
def maxtoplam(inlist=[4, -3, 5, -2, -1, 2, 6, -2]):
    max = 0
    for i in range(len(inlist)):
        for j in range(i+1, len(inlist)):
            
            t = 0
            for k in range(i,j+1):
                t = t + inlist[k]
            if t > max:
                max = t
                i_1, i_2 = i, j
    return max , i_1, i_2
    
    
def maxtoplam(inlist=[4, -3, 5, -2, -1, 2, 6, -2]):   
    max = 0
    for i in range(len(inlist)):
        t = 0
        for j in range(i, len(inlist)):
            t = t + inlist[j]
            if t > max:
                max = t
                i_1, i_2 = i, j
    return max , i_1, i_2
    
    Selection sort
def Selection(inList=[7, 6, 8, 9, 3, 2, 10, 5, 1]):
    n = len(inList)
    swaps, comparison = 0, 0
    for key in range(n):
        min = key
        for j in range(key+1, n):
            comparison += 1
            if inList[min] > inList[j]:
                min = j
        swaps += 1
        inList[key], inList[min] = inList[min], inList[key]
    return 'SelectionSorted List: {} \nComparison: {} \nSwap: {} '.format(
        inList, comparison, swaps)
        
        
        Bubble sort 
def Bubble(inList=[7, 6, 8, 9, 3, 2, 10, 5, 1]):
    n = len(inList)
    swaps, comparison = 0, 0
    for i in range(n):
        for j in range(0, n-i-1):
            comparison += 1
            if inList[j] > inList[j+1]:
                swaps += 1
                inList[j], inList[j+1] = inList[j+1], inList[j]

    return 'BubbleSorted List: {} \nComparison: {} \nSwap: {} '.format(
        inList, comparison, swaps)
    
    
    
    
    
    
    
